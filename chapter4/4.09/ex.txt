网上这份东西比较神经。。除非真需要省那么点空间。。

建议用bit加霍夫曼压缩来保存

数字1-9需要4bits

1. 99%的情况下置位空格少于80%，所以可以用1bit “0” 来表示空位，用1xxxx（5 bits）来表示置位空格。例如有20个空格置位，则可以仅用20×5 + 41 = 141bits，约18 bytes

2. 再有数字1-9转换为0-8，可以发现仅有数字8是“11”开头的，所以数字8可以仅用两bits，又可以节约（1/9） * （3/5）的置位空间， 上例中平均可以节约7bits，那么17bytes就够了

3. 再继续，显然有不少连续的0，可以用0xxx来表示xxx个连续的零，先统计下连续零的个数和种类来确定0的设置，例如“000”“000”和“00000”需要11位，如果设00为三个个零，010为一个零，011为两个零则仅需“00”，“00”“00011”9位。具体的找本压缩算法的数来看看。如果不想研究的话，在步骤二后直接调用通用的无损压缩就可以了，可以估计，如果量大的话，基本上平均一个数独有10个字节就够了
